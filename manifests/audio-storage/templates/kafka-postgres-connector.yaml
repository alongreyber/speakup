apiVersion: apps/v1beta2
kind: Deployment
metadata:
    name: {{.Release.Name}}-kafka-postgres-connector-deployment
    labels:
        app: kafka-postgres-connector
spec:
    replicas: 1
    selector:
      matchLabels:
        app: kafka-postgres-connector
    template:
        metadata:
            labels:
                app: kafka-postgres-connector
        spec:
            volumes:
            - name: jdbc-sink-config
              configMap:
                name: jdbc-sink-configmap
            containers:
            - name: connector
              image: confluentinc/cp-kafka-connect 
              imagePullPolicy: Always
              ports:
              - containerPort: 8083
                name: rest
                protocol: TCP
              volumeMounts:
              - name: jdbc-sink-config
                mountPath: /etc/config
              command: ["connect-standalone", "/etc/config/worker.properties", "/etc/config/jdbc-sink.properties"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jdbc-sink-configmap
data:
  worker.properties: |+
    bootstrap.servers={{.Release.Name}}-kafka:9092
    key.converter=org.apache.kafka.connect.storage.StringConverter
    value.converter=org.apache.kafka.connect.json.JsonConverter
    value.converter.schemas.enable=true
    internal.key.converter=org.apache.kafka.connect.json.JsonConverter
    internal.value.converter=org.apache.kafka.connect.json.JsonConverter
    offset.storage.file.filename=/tmp/connect.offsets
    log4j.root.loglevel=DEBUG
    plugin.path=/usr/share/java
  jdbc-sink.properties: |+
    name=audio-save
    connector.class=io.confluent.connect.jdbc.JdbcSinkConnector
    tasks.max=1
    topics={{.Values.transcodedFilesTopic}}
    connection.url=jdbc:postgresql://{{.Release.Name}}-postgresql/postgres
    connection.user={{.Values.postgresql.postgresUser}}
    connection.password={{.Values.postgresql.postgresPassword}}
    auto.create=true
---
kind: Service
apiVersion: v1
metadata:
  name: {{.Release.Name}}-kafka-postgres-connector
spec:
  selector:
    app: kafka-postgres-connector
  ports:
  - port: 8083
